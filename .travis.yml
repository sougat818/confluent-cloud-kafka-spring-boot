language: generic
dist: focal
os: linux

services:
  - docker

branches:
  only:
    - master

# Install terraform
before_install:
  - docker build ./confluent-cloud-deploy -t terraform
  - docker run -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --rm --name terraform -v ${PWD}:/workspace -w /workspace  terraform:latest init /workspace/confluent-cloud-deploy/dev

jobs:
  include:
    - stage: terraform-state-file-backend 
      if: type IN (push) and branch = master
      script:
        - echo "Creating Terraform State file Backend"
        - cd terraform-state-file-backend 
        - make init
        - make import
        - make plan
	- make apply
        - cd ..
    - stage: terraform plan
      # Only run terraform validate and plan state if within a pull request
      if: type IN (pull_request)
      script:
        - echo "Executing Terraform Plan on pull request code"
        - docker run -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --rm --name terraform -v ${PWD}:/workspace -w /workspace  terraform:latest plan /workspace/confluent-cloud-deploy/dev
    - stage: terraform apply
      # Only run terraform apply stage if outside of a pull request
      if: type IN (push) and branch = master
      script:
        - echo "Executing Terraform Apply on merged code"
        - docker run -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --rm --name terraform -v ${PWD}:/workspace -w /workspace  terraform:latest apply -input=false -auto-approve /workspace/confluent-cloud-deploy/dev
